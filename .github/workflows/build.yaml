name: CI

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  devcontainers:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build devcontainers image
      run: |
        set -x
        npm install -g @devcontainers/cli
        IMAGE_ID=ghcr.io/$GITHUB_REPOSITORY/devcontainers-ocaml.ci
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        old_id=''
        if docker pull $IMAGE_ID:$GITHUB_REF_NAME; then
          old_id=$(docker image inspect $IMAGE_ID:$GITHUB_REF_NAME --format "{{.ID}}")
        fi
        devcontainer build --image-name $IMAGE_ID --cache-from $IMAGE_ID:$GITHUB_REF_NAME --workspace-folder .
        devcontainer up --workspace-folder .
        new_id=$(docker image inspect $IMAGE_ID --format "{{.ID}}")
        if [ "$old_id" != "$new_id" ]; then
          docker tag $IMAGE_ID $IMAGE_ID:$GITHUB_REF_NAME || true
          docker push $IMAGE_ID:$GITHUB_REF_NAME || true
        fi
    - name: ccache
      uses: actions/cache@v2
      id: tdlib_ccache
      with:
        path: .ccache
        key: tdlib-ccache-${{ secrets.CACHE_ID }}-${{ github.job }}-${{ hashFiles('Makefile')}}-${{ env.GITHUB_REF_NAME }}
        restore-keys: |
            key: tdlib-ccache-${{ secrets.CACHE_ID }}-${{ github.job }}
    - name: Build
      run: |
        set -x
        workspace=$(devcontainer exec --workspace-folder . env pwd)
        devcontainer exec --workspace-folder . env CCACHE_DIR=${workspace}/.ccache make build
  CI:
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Environment
        shell: bash
        run: |
          set -x
          env
      - name: vcpkg cache
        if: runner.os == 'Windows'
        path: /Users/runneradmin/AppData/Local/vcpkg/archives
        key: tdlib-vcpkg-${{ secrets.CACHE_ID }}-${{ hashFiles('Makefile')}}-${{ env.GITHUB_REF_NAME }}
        restore-keys: |
            key: tdlib-vcpkg-${{ secrets.CACHE_ID }}
      - name: Setup
        run: make sys-deps.${{ runner.os }}
      - name: ccache
        uses: actions/cache@v2
        id: tdlib_ccache
        with:
          path: .ccache
          key: tdlib-ccache-${{ secrets.CACHE_ID }}-${{ github.job }}-${{ matrix.os }}-${{ hashFiles('Makefile')}}-${{ env.GITHUB_REF_NAME }}
          restore-keys: |
              key: tdlib-ccache-${{ secrets.CACHE_ID }}-${{ github.job }}-${{ matrix.os }}
      - name: Build
        run: env CCACHE_DIR=${GITHUB_WORKSPACE}/.ccache make build.${{ runner.os }}
